/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

using Newtonsoft.Json;

using RosSharp.RosBridgeClient.MessageTypes.Std;
using RosSharp.RosBridgeClient.MessageTypes.Geometry;

namespace RosSharp.RosBridgeClient.MessageTypes.Gazebo
{
    public class GetModelStateResponse : Message
    {
        [JsonIgnore]
        public const string RosMessageName = "gazebo_msgs/GetModelState";

        public Header header;
        //  Standard metadata for higher-level stamped data types.
        //  * header.seq holds the number of requests since the plugin started
        //  * header.stamp timestamp related to the pose
        //  * header.frame_id not used but currently filled with the relative_entity_name
        public Pose pose;
        //  pose of model in relative entity frame
        public Twist twist;
        //  twist of model in relative entity frame
        public bool success;
        //  return true if get successful
        public string status_message;
        //  comments if available

        public GetModelStateResponse()
        {
            this.header = new Header();
            this.pose = new Pose();
            this.twist = new Twist();
            this.success = false;
            this.status_message = "";
        }

        public GetModelStateResponse(Header header, Pose pose, Twist twist, bool success, string status_message)
        {
            this.header = header;
            this.pose = pose;
            this.twist = twist;
            this.success = success;
            this.status_message = status_message;
        }
    }
}
