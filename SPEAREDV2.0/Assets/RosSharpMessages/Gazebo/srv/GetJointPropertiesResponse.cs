/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

using Newtonsoft.Json;

namespace RosSharp.RosBridgeClient.MessageTypes.Gazebo
{
    public class GetJointPropertiesResponse : Message
    {
        [JsonIgnore]
        public const string RosMessageName = "gazebo_msgs/GetJointProperties";

        //  joint type
        public byte type;
        public const byte REVOLUTE = 0; //  single DOF
        public const byte CONTINUOUS = 1; //  single DOF (revolute w/o joints)
        public const byte PRISMATIC = 2; //  single DOF
        public const byte FIXED = 3; //  0 DOF
        public const byte BALL = 4; //  3 DOF
        public const byte UNIVERSAL = 5; //  2 DOF
        //  dynamics properties
        public double[] damping;
        //  joint state
        public double[] position;
        public double[] rate;
        //  service return status
        public bool success;
        //  return true if get successful
        public string status_message;
        //  comments if available

        public GetJointPropertiesResponse()
        {
            this.type = 0;
            this.damping = new double[0];
            this.position = new double[0];
            this.rate = new double[0];
            this.success = false;
            this.status_message = "";
        }

        public GetJointPropertiesResponse(byte type, double[] damping, double[] position, double[] rate, bool success, string status_message)
        {
            this.type = type;
            this.damping = damping;
            this.position = position;
            this.rate = rate;
            this.success = success;
            this.status_message = status_message;
        }
    }
}
