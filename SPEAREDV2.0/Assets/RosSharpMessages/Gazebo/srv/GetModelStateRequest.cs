/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

using Newtonsoft.Json;

namespace RosSharp.RosBridgeClient.MessageTypes.Gazebo
{
    public class GetModelStateRequest : Message
    {
        [JsonIgnore]
        public const string RosMessageName = "gazebo_msgs/GetModelState";

        public string model_name;
        //  name of Gazebo Model
        public string relative_entity_name;
        //  return pose and twist relative to this entity
        //  an entity can be a model, body, or geom
        //  be sure to use gazebo scoped naming notation (e.g. [model_name::body_name])
        //  leave empty or "world" will use inertial world frame

        public GetModelStateRequest()
        {
            this.model_name = "";
            this.relative_entity_name = "";
        }

        public GetModelStateRequest(string model_name, string relative_entity_name)
        {
            this.model_name = model_name;
            this.relative_entity_name = relative_entity_name;
        }
    }
}
